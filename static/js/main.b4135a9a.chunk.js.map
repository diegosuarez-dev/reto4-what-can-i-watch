{"version":3,"sources":["img/blue_long_1.svg","components/Header/Header.jsx","services/redux/actions.js","components/Movie/Movie.jsx","components/Series/Series.jsx","components/Top10/Top10.jsx","components/DetailedMovie/DetailedMovie.jsx","components/DetailedSeries/DetailedSeries.jsx","components/SearchForm/SearchForm.jsx","components/SearchResults/SearchResults.jsx","components/Home/Home.jsx","App.js","serviceWorker.js","services/redux/reducer.js","services/redux/store.js","index.js"],"names":["module","exports","Header","props","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","activeClassName","href","role","aria-haspopup","aria-labelledby","loadResultsAction","dispatch","itemType","items","querySentAction","querySent","loadGenresAction","genres","loadDetailedMovieAction","detailedMovie","loadDetailedSeriesAction","detailedSeries","loadRecommendedMoviesAction","recommendedMovies","loadRecommendedSeriesAction","recommendedSeries","connectedMovie","connect","state","movie","src","poster_path","alt","title","original_title","release_date","genre_ids","map","gId","key","filter","mGen","name","vote_count","vote_average","overview","length","substring","indexOf","connectedSeries","serie","original_name","first_air_date","sgId","sGen","connectedTop10","movies","series","loadTop10","loadGenres","useEffect","axios","get","then","res","data","catch","console","error","match","params","results","slice","connectedDetailedMovie","loadDetailedMovie","loadRecommendedMovies","movieId","window","scrollTo","gen","runtime","recMovie","connectedDetailedSeries","loadDetailedSeries","loadRecommendedSeries","seriesId","last_air_date","last_episode_to_air","episode_number","season_number","seasons","season","air_date","episode_count","recSeries","connectedSearchResults","loadSearch","useState","setName","adult","setAdult","nameRef","useRef","adultRef","current","focus","checked","onSubmit","event","preventDefault","encodeURIComponent","ref","value","placeholder","onChange","target","htmlFor","loadResults","Home","logo","App","path","component","exact","Top10","SearchResults","DetailedMovie","DetailedSeries","Boolean","location","hostname","initialState","reducer","action","prevId","newGenres","concat","el","includes","push","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b4135a9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blue_long_1.86ff7c17.svg\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n    \r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand mb-0 h1\">¿Qué puedo ver?</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <NavLink className=\"nav-link\" to=\"/reto4-what-can-i-watch/\" activeClassName=\"active\">Home</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            {/*eslint-disable-next-line*/}\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                Películas\r\n                            </a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                <NavLink className=\"dropdown-item\" to=\"/reto4-what-can-i-watch/movie/top10\">Las 10 más populares</NavLink>\r\n                                <div className=\"dropdown-divider\"></div>\r\n                                <NavLink className=\"dropdown-item\" to=\"/reto4-what-can-i-watch/movie/search\">Buscar películas</NavLink>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            {/*eslint-disable-next-line*/}\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                Series\r\n                            </a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                <NavLink className=\"dropdown-item\" to=\"/reto4-what-can-i-watch/tv/top10\">Las 10 más populares</NavLink>\r\n                                <div className=\"dropdown-divider\"></div>\r\n                                <NavLink className=\"dropdown-item\" to=\"/reto4-what-can-i-watch/tv/search\">Buscar series</NavLink>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","export const loadResultsAction = (dispatch) => (itemType, items) => \r\n    dispatch({\r\n        type: 'LOAD_RESULTS',\r\n        itemType: itemType,\r\n        items: items\r\n    });\r\n\r\nexport const querySentAction = (dispatch) => (querySent) => \r\n    dispatch({\r\n        type: 'QUERY_SENT',\r\n        querySent: querySent\r\n    });\r\n\r\nexport const loadGenresAction = (dispatch) => (itemType, genres) => \r\n    dispatch({\r\n        type: 'LOAD_GENRES',\r\n        itemType: itemType,\r\n        genres: genres\r\n    });\r\n\r\nexport const loadDetailedMovieAction = (dispatch) => (detailedMovie) => \r\n    dispatch({\r\n        type: 'LOAD_MOVIE_DETAILS',\r\n        detailedMovie: detailedMovie\r\n    });\r\n\r\nexport const loadDetailedSeriesAction = (dispatch) => (detailedSeries) => \r\n    dispatch({\r\n        type: 'LOAD_SERIES_DETAILS',\r\n        detailedSeries: detailedSeries\r\n    });\r\n\r\nexport const loadRecommendedMoviesAction = (dispatch) => (recommendedMovies) => \r\n    dispatch({\r\n        type: 'LOAD_RECOMMENDED_MOVIES',\r\n        recommendedMovies: recommendedMovies\r\n    });\r\n\r\nexport const loadRecommendedSeriesAction = (dispatch) => (recommendedSeries) => \r\n    dispatch({\r\n        type: 'LOAD_RECOMMENDED_SERIES',\r\n        recommendedSeries: recommendedSeries\r\n    });","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Movie = props => {\r\n\r\n    return (\r\n        <Link to={`/reto4-what-can-i-watch/movie/${props.movie.id}`}> \r\n            <div className=\"media\">\r\n                <img src={\"https://image.tmdb.org/t/p/w200\" + props.movie.poster_path} className=\"mr-3\" alt={`Poster of ${props.movie.title}`}></img>\r\n                <div className=\"media-body\">\r\n                    <h4 className=\"mt-0\">{props.movie.title}</h4>\r\n                    <h6 className=\"mt-0\">Título original: {props.movie.original_title}</h6>\r\n                    <h6 className=\"mt-0\">Fecha de lanzamiento: {props.movie.release_date}</h6>\r\n                    <h6 className=\"mt-0\">Géneros:</h6>\r\n                    <ul>{props.movie.genre_ids?.map(\r\n                        gId => (\r\n                            <li key={props.movie.id + gId}>\r\n                                {props.genres.filter(mGen => mGen.id === gId)[0]?.name}\r\n                            </li>\r\n                        )\r\n                    )}</ul>\r\n                    <h6 className=\"mt-0\">Número de votos: {props.movie.vote_count}</h6>\r\n                    <h6 className=\"mt-0\">Puntuación media: {props.movie.vote_average}</h6>\r\n                    <p>{\r\n                        props.movie.overview.length > 140\r\n                            ? props.movie.overview.substring(0, props.movie.overview.indexOf(\" \", 139)) + '... '\r\n                            : props.movie.overview\r\n                    }</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    genres: state.genres\r\n});\r\n\r\nconst connectedMovie = connect(\r\n    mapStateToProps,\r\n    null,\r\n)(Movie);\r\n\r\nexport default connectedMovie;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Series = props => {\r\n\r\n    return (\r\n        <Link to={`/reto4-what-can-i-watch/tv/${props.serie.id}`}>\r\n            <div className=\"media\">\r\n                <img src={\"https://image.tmdb.org/t/p/w200\" + props.serie.poster_path} className=\"mr-3\" alt={`Poster of ${props.serie.name}`}></img>\r\n                <div className=\"media-body\">\r\n                    <h5 className=\"mt-0\">{props.serie.name}</h5>\r\n                    <h6 className=\"mt-0\">Título original: {props.serie.original_name}</h6>\r\n                    <h6 className=\"mt-0\">Primera emisión: {props.serie.first_air_date}</h6>\r\n                    <h6 className=\"mt-0\">Géneros:</h6>\r\n                    <ul>{props.serie.genre_ids?.map(\r\n                        sgId => (\r\n                            <li key={props.serie.id + sgId}>\r\n                                {props.genres.filter(sGen => sGen.id === sgId)[0]?.name}\r\n                            </li>\r\n                        )\r\n                    )}</ul>\r\n                    <h6 className=\"mt-0\">Número de votos: {props.serie.vote_count}</h6>\r\n                    <h6 className=\"mt-0\">Puntuación media: {props.serie.vote_average}</h6>\r\n                    <p>{\r\n                        props.serie.overview.length > 140\r\n                            ? props.serie.overview.substring(0, props.serie.overview.indexOf(\" \", 139)) + '... '\r\n                            : props.serie.overview\r\n                    }</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    genres: state.genres\r\n});\r\n\r\nconst connectedSeries = connect(\r\n    mapStateToProps,\r\n    null,\r\n)(Series);\r\n\r\nexport default connectedSeries;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from \"axios\";\r\nimport { loadResultsAction, loadGenresAction } from '../../services/redux/actions';\r\nimport Movie from '../Movie/Movie';\r\nimport Series from '../Series/Series';\r\nimport './Top10.scss';\r\n\r\nconst Top10 = props => {\r\n    useEffect(\r\n        () => {\r\n            axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=9b4d066eedd374b20d0be2192a5327ec&language=es-ES\r\n            `).then(res => props.loadGenres(\"movie\", res.data.genres)).catch(console.error);\r\n            axios.get(`https://api.themoviedb.org/3/genre/tv/list?api_key=9b4d066eedd374b20d0be2192a5327ec&language=es-ES\r\n            `).then(res => props.loadGenres(\"tv\", res.data.genres)).catch(console.error);\r\n            //eslint-disable-next-line\r\n            axios.get(`https://api.themoviedb.org/3/${props.match.params.itemType}/popular?api_key=9b4d066eedd374b20d0be2192a5327ec&language=es-ES&page=1`).then(res => props.loadTop10(props.match.params.itemType, res.data.results)).catch(console.error);\r\n        }\r\n        //eslint-disable-next-line\r\n        , [props.match.params.itemType]);\r\n    if (props.match.params.itemType === 'movie') {\r\n        return (\r\n            <div className={props.match.params.itemType}>\r\n                {\r\n                    props.movies.slice(0,10).map(\r\n                        movie => <Movie movie={movie} key={movie.id}/>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    } else if (props.match.params.itemType === 'tv') {\r\n        return (\r\n            <div className={props.match.params.itemType}>\r\n                {\r\n                    props.series.slice(0,10).map(\r\n                        serie => <Series serie={serie} key={serie.id}/>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    movies: state.movies,\r\n    series: state.series,\r\n    genres: state.genres\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    loadTop10: loadResultsAction(dispatch),\r\n    loadGenres: loadGenresAction(dispatch)\r\n});\r\n\r\nconst connectedTop10 = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(Top10);\r\n\r\nexport default connectedTop10;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadDetailedMovieAction, loadRecommendedMoviesAction } from '../../services/redux/actions';\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\nimport './DetailedMovie.scss';\r\n\r\nconst DetailedMovie = props => {\r\n    useEffect(\r\n        () => {\r\n            //eslint-disable-next-line\r\n            axios.get(`https://api.themoviedb.org/3/movie/${props.match.params.movieId}?api_key=9b4d066eedd374b20d0be2192a5327ec&language=es-ES\r\n            `).then(res => props.loadDetailedMovie(res.data)).catch(console.error);\r\n            axios.get(`https://api.themoviedb.org/3/movie/${props.match.params.movieId}/recommendations?api_key=9b4d066eedd374b20d0be2192a5327ec&language=es-ES&page=1\r\n            `).then(res => props.loadRecommendedMovies(res.data.results)).catch(console.error);\r\n            window.scrollTo(0, 0);\r\n        }\r\n        //eslint-disable-next-line\r\n        , [props.match.params.movieId]);\r\n    return (\r\n        <article className=\"detailedMovie\">\r\n            <header>\r\n                <div className=\"leftHeader\">\r\n                    <h3>{props.detailedMovie.title}</h3>\r\n                    <img src={\"https://image.tmdb.org/t/p/w200\" + props.detailedMovie.poster_path} alt={`Poster of ${props.detailedMovie.title}`}></img>\r\n                </div>\r\n                <div className=\"rightHeader\">\r\n                    <h6>Título original: {props.detailedMovie.original_title}</h6>\r\n                    <h6>Fecha de lanzamiento: {props.detailedMovie.release_date}</h6>\r\n                    <h6>Géneros: </h6>\r\n                    <ul>{props.detailedMovie.genres?.map(\r\n                        gen => (\r\n                            <li key={props.detailedMovie.id + gen.id}>\r\n                                {gen.name}\r\n                            </li>\r\n                        )\r\n                    )}</ul>\r\n                    <h6>Duración: {props.detailedMovie.runtime} minutos</h6>\r\n                    <h6>Número de votos: {props.detailedMovie.vote_count}</h6>\r\n                    <h6>Puntuación media: <span>{props.detailedMovie.vote_average}</span></h6>\r\n                </div>\r\n            </header>\r\n            <main>\r\n                {props.detailedMovie.overview ? <h6>Visión general:</h6> : null}\r\n                {props.detailedMovie.overview ? <p>{props.detailedMovie.overview}</p> : null}                \r\n            </main>\r\n            <footer>\r\n                <h4>También te podrían interesar...</h4>\r\n                <div className=\"recommendations\">\r\n                {\r\n                    props.recommendedMovies.slice(0, 5).map(\r\n                        recMovie => {\r\n                            return (recMovie.poster_path ? <Link to={`/reto4-what-can-i-watch/movie/${recMovie.id}`} key={recMovie.id}>\r\n                                <h6>{recMovie.title}</h6>\r\n                                <img src={\"https://image.tmdb.org/t/p/w200\" + recMovie.poster_path} alt={`Poster of ${recMovie.title}`}></img>\r\n                            </Link> : null)\r\n                        }\r\n                    )\r\n                }\r\n                </div>\r\n            </footer>\r\n        </article>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    detailedMovie: state.detailedMovie,\r\n    recommendedMovies: state.recommendedMovies\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    loadDetailedMovie: loadDetailedMovieAction(dispatch),\r\n    loadRecommendedMovies: loadRecommendedMoviesAction(dispatch)\r\n});\r\n\r\nconst connectedDetailedMovie = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(DetailedMovie);\r\n\r\nexport default connectedDetailedMovie;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadDetailedSeriesAction, loadRecommendedSeriesAction } from '../../services/redux/actions';\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\nimport './DetailedSeries.scss';\r\n\r\nconst DetailedSeries = props => {\r\n    useEffect(\r\n        () => {\r\n            //eslint-disable-next-line\r\n            axios.get(`https://api.themoviedb.org/3/tv/${props.match.params.seriesId}?api_key=9b4d066eedd374b20d0be2192a5327ec&language=es-ES`).then(res => props.loadDetailedSeries(res.data)).catch(console.error);\r\n            axios.get(`https://api.themoviedb.org/3/tv/${props.match.params.seriesId}/recommendations?api_key=9b4d066eedd374b20d0be2192a5327ec&language=es-ES&page=1\r\n            `).then(res => props.loadRecommendedSeries(res.data.results)).catch(console.error);\r\n            window.scrollTo(0, 0);\r\n        }\r\n        //eslint-disable-next-line\r\n        , [props.match.params.seriesId]);\r\n    return (\r\n        <article className=\"detailedSeries\">\r\n            <header>\r\n                <div className=\"leftHeader\">\r\n                    <h3>{props.detailedSeries.name}</h3>\r\n                    <img src={\"https://image.tmdb.org/t/p/w200\" + props.detailedSeries.poster_path} alt={`Poster of ${props.detailedSeries.name}`}></img>\r\n                </div>\r\n                <div className=\"rightHeader\">\r\n                    <h6>Título original: {props.detailedSeries.original_name}</h6>\r\n                    {props.detailedSeries.first_air_date\r\n                        ? <h6>Fecha primera emisión: {props.detailedSeries.first_air_date}</h6>\r\n                        : null}\r\n                    {props.detailedSeries.last_air_date\r\n                        ? <h6>Fecha última emisión: {props.detailedSeries.last_air_date}</h6>\r\n                        : null}\r\n                    {props.detailedSeries.last_episode_to_air?.episode_number && props.detailedSeries.last_episode_to_air?.season_number\r\n                        ? <h6>Último episodio emitido: episodio {props.detailedSeries.last_episode_to_air?.episode_number} de la temporada {props.detailedSeries.last_episode_to_air?.season_number}</h6>\r\n                        : null}\r\n                    <h6>Géneros: </h6>\r\n                    <ul>{props.detailedSeries.genres?.map(\r\n                        gen => (\r\n                            <li key={props.detailedSeries.id + gen.id}>\r\n                                {gen.name}\r\n                            </li>\r\n                        )\r\n                    )}</ul>\r\n                    <h6>Número de votos: {props.detailedSeries.vote_count}</h6>\r\n                    <h6>Puntuación media: <span>{props.detailedSeries.vote_average}</span></h6>\r\n                </div>\r\n            </header>\r\n            <main>\r\n                {props.detailedSeries.overview ? <h6>Visión general:</h6> : null}\r\n                {props.detailedSeries.overview ? <p>{props.detailedSeries.overview}</p> : null}\r\n                {props.detailedSeries.seasons ? <h6>Temporadas:</h6> : null}\r\n                <ul>{props.detailedSeries.seasons?.map(\r\n                    season => (\r\n                        <li key={props.detailedSeries.id + season.id}>\r\n                            {season.name}\r\n                            <ul>\r\n                                <li>Fecha estreno: {season.air_date}</li>\r\n                                <li>Nº episodios: {season.episode_count}</li>\r\n                            </ul>\r\n                        </li>\r\n                    )\r\n                )}</ul>\r\n            </main>\r\n            <footer>\r\n                <h4>También te podrían interesar...</h4>\r\n                <div className=\"recommendations\">\r\n                    {\r\n                        props.recommendedSeries.slice(0, 5).map(\r\n                            recSeries => {\r\n                                return (recSeries.poster_path ? <Link to={`/reto4-what-can-i-watch/tv/${recSeries.id}`} key={recSeries.id}>\r\n                                    <h6>{recSeries.name}</h6>\r\n                                    <img src={\"https://image.tmdb.org/t/p/w200\" + recSeries.poster_path} alt={`Poster of ${recSeries.name}`}></img>\r\n                                </Link> : null)\r\n                            }\r\n                        )\r\n                    }\r\n                </div>\r\n            </footer>\r\n        </article>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    detailedSeries: state.detailedSeries,\r\n    recommendedSeries: state.recommendedSeries\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    loadDetailedSeries: loadDetailedSeriesAction(dispatch),\r\n    loadRecommendedSeries: loadRecommendedSeriesAction(dispatch)\r\n});\r\n\r\nconst connectedDetailedSeries = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(DetailedSeries);\r\n\r\nexport default connectedDetailedSeries;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from \"axios\";\r\nimport { loadResultsAction, querySentAction } from '../../services/redux/actions';\r\nimport './SearchForm.scss';\r\n\r\nconst SearchForm = props => {\r\n    const [name, setName] = useState('');\r\n    const [adult, setAdult] = useState(false);\r\n    const nameRef = useRef(null);\r\n    const adultRef = useRef(null);\r\n    useEffect(() => {\r\n        nameRef.current.focus();\r\n        setName('');\r\n        adultRef.current.checked = false;\r\n        setAdult(false);\r\n        props.querySent(false);\r\n    },\r\n        //eslint-disable-next-line\r\n        [props.itemType]);\r\n\r\n    const handleNameChange = event => {\r\n        setName(event.target.value);\r\n    }\r\n    const handleAdultChange = event => {\r\n        setAdult(event.target.checked);\r\n    }\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        axios.get(`https://api.themoviedb.org/3/search/${props.itemType}?api_key=9b4d066eedd374b20d0be2192a5327ec&language=es-ES&query=${encodeURIComponent(name)}&page=1&include_adult=${adult}`).then(res => props.loadSearch(props.itemType, res.data.results)).catch(console.error);\r\n        props.querySent(true);\r\n    }\r\n    return (\r\n        <form className={`${props.itemType}Form`} onSubmit={handleSubmit}>\r\n            <input id=\"name\" type=\"text\" name=\"name\" ref={nameRef} value={name} placeholder={`¿Qué ${props.itemType === 'movie' ? 'película' : 'serie'} buscas?`} onChange={handleNameChange} />\r\n            <input type=\"checkbox\" id=\"adult\" name=\"adult\" ref={adultRef} value={adult} onChange={handleAdultChange} />\r\n            <label htmlFor=\"adult\">Adultos</label>\r\n            <button type=\"submit\">Enviar</button>\r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    loadSearch: loadResultsAction(dispatch),\r\n    querySent: querySentAction(dispatch)\r\n});\r\n\r\nconst connectedSearchResults = connect(\r\n    null,\r\n    mapDispatchToProps,\r\n)(SearchForm);\r\n\r\nexport default connectedSearchResults;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from \"axios\";\r\nimport { loadGenresAction, loadResultsAction } from '../../services/redux/actions';\r\nimport Movie from '../Movie/Movie';\r\nimport Series from '../Series/Series';\r\nimport SearchForm from '../SearchForm/SearchForm';\r\nimport './SearchResults.scss';\r\n\r\nconst Search = props => {\r\n    useEffect(\r\n        () => {\r\n            axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=9b4d066eedd374b20d0be2192a5327ec&language=es-ES\r\n            `).then(res => props.loadGenres(\"movie\", res.data.genres)).catch(console.error);\r\n            axios.get(`https://api.themoviedb.org/3/genre/tv/list?api_key=9b4d066eedd374b20d0be2192a5327ec&language=es-ES\r\n            `).then(res => props.loadGenres(\"tv\", res.data.genres)).catch(console.error);\r\n            props.loadResults(props.match.params.itemType, []);\r\n        }\r\n        //eslint-disable-next-line\r\n        , []);\r\n    if (props.match.params.itemType === 'movie') {\r\n        return (\r\n            <section>\r\n                <SearchForm itemType={props.match.params.itemType} />\r\n                <div className={props.match.params.itemType}>\r\n                    {props.movies.length === 0 && props.querySent\r\n                        ?\r\n                        <div className=\"notFound\">\r\n                            <h1>Vaya... ¡no hemos encontrado lo que buscas!</h1>\r\n                            <h3>Puede que no la tengamos pero... ¿podrías asegurarte de que has escrito bien el título?</h3>\r\n                        </div>\r\n                        :\r\n                        props.movies.map(\r\n                            movie => <Movie movie={movie} key={movie.id} />\r\n                        )\r\n                    }\r\n                </div>\r\n            </section>\r\n        );\r\n    } else if (props.match.params.itemType === 'tv') {\r\n        return (\r\n            <section>\r\n                <SearchForm itemType={props.match.params.itemType} />\r\n                <div className={props.match.params.itemType}>\r\n                    {props.series.length === 0 && props.querySent\r\n                        ?\r\n                        <div className=\"notFound\">\r\n                            <h1>Vaya... ¡no hemos encontrado lo que buscas!</h1>\r\n                            <h3>Puede que no la tengamos pero... ¿podrías asegurarte de que has escrito bien el título?</h3>\r\n                        </div>\r\n                        :\r\n                        props.series.map(\r\n                            serie => <Series serie={serie} key={serie.id} />\r\n                        )\r\n                    }\r\n                </div>\r\n            </section>\r\n        );\r\n    } else {\r\n        return (\r\n            <section>\r\n                <SearchForm itemType={props.match.params.itemType} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    movies: state.movies,\r\n    series: state.series,\r\n    querySent: state.querySent,\r\n    genres: state.genres\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    loadGenres: loadGenresAction(dispatch),\r\n    loadResults: loadResultsAction(dispatch)\r\n});\r\n\r\nconst connectedSearchResults = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(Search);\r\n\r\nexport default connectedSearchResults;","import React from 'react';\r\nimport logo from '../../img/blue_long_1.svg';\r\nimport './Home.scss';\r\n\r\nconst Home = props => {\r\n    return (\r\n        <article id=\"hArticle\">\r\n            <h1 id=\"hH1\">¿Qué puedo ver?</h1>\r\n            <h4 id=\"hH4\">La web con toda la información sobre tus pelis y series favoritas</h4>\r\n            <h6 id=\"hH6\">Powered by</h6>\r\n            <img id=\"hImg\" src={logo} alt=\"Logo The Movie DB\"/>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport Header from './components/Header/Header';\r\nimport Top10 from './components/Top10/Top10';\r\nimport DetailedMovie from './components/DetailedMovie/DetailedMovie';\r\nimport DetailedSeries from './components/DetailedSeries/DetailedSeries';\r\nimport SearchResults from './components/SearchResults/SearchResults';\r\nimport Home from './components/Home/Home';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Header/>\r\n        <Switch>\r\n          <Route path=\"/reto4-what-can-i-watch/\" component={Home} exact/>\r\n          <Route path=\"/reto4-what-can-i-watch/:itemType/top10\" component={Top10} exact/>\r\n          <Route path=\"/reto4-what-can-i-watch/:itemType/search\" component={SearchResults} exact/>\r\n          <Route path=\"/reto4-what-can-i-watch/movie/:movieId\" component={DetailedMovie} exact/>\r\n          <Route path=\"/reto4-what-can-i-watch/tv/:seriesId\" component={DetailedSeries} exact/>\r\n          <Route path=\"/\">\r\n            <Redirect to=\"/reto4-what-can-i-watch/\"/>\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    movies: [],\r\n    series: [],\r\n    querySent: false,\r\n    genres: [],\r\n    detailedMovie: {},\r\n    detailedSeries: {},\r\n    recommendedMovies: [],\r\n    recommendedSeries: []\r\n}\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'LOAD_RESULTS':\r\n            if (action.itemType === 'movie') {\r\n                return {\r\n                    ...state,\r\n                    movies: action.items,\r\n                };\r\n            } else if (action.itemType === 'tv') {\r\n                return {\r\n                    ...state,\r\n                    series: action.items,\r\n                };\r\n            }\r\n            break;\r\n        case 'QUERY_SENT':\r\n            return {\r\n                ...state,\r\n                querySent: action.querySent\r\n            }\r\n        case 'LOAD_GENRES':\r\n            /*\r\n            He comprobado que un mismo género tiene el mismo id tanto para películas como para series, pero la API tiene dos peticiones diferentes para cada una. El problema se dio cuando una serie daba error al renderizar porque tenía ids de género que no aparecían en la respuesta de géneros de serie y que, tras investigarlo, comprobé que sí aparecían en la respuesta de películas. Por lo tanto, almacenándolos todos en el mismo array y evitando los duplicados me aseguro de que se muestran correctamente.\r\n            */\r\n            let prevId = [];\r\n            let newGenres = state.genres.concat(action.genres).filter(\r\n                //eslint-disable-next-line\r\n                el => {\r\n                    if (!prevId.includes(el.id)) {\r\n                        prevId.push(el.id);\r\n                        return el;\r\n                    }\r\n                }\r\n            );            \r\n            return {\r\n                ...state,\r\n                genres: newGenres\r\n            }\r\n        case 'LOAD_MOVIE_DETAILS':\r\n            return {\r\n                ...state,\r\n                detailedMovie: action.detailedMovie\r\n            }\r\n        case 'LOAD_SERIES_DETAILS':\r\n            return {\r\n                ...state,\r\n                detailedSeries: action.detailedSeries\r\n            }\r\n        case 'LOAD_RECOMMENDED_MOVIES':\r\n            return {\r\n                ...state,\r\n                recommendedMovies: action.recommendedMovies\r\n            }\r\n        case 'LOAD_RECOMMENDED_SERIES':\r\n            return {\r\n                ...state,\r\n                recommendedSeries: action.recommendedSeries\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore } from 'redux';\r\nimport reducer from './reducer.js'\r\n\r\n\r\nconst store = createStore(reducer);\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './services/redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}